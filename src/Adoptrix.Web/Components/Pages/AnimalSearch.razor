@page "/animals"
@using Adoptrix.Contracts.Requests
@using Adoptrix.Contracts.Responses
@inject AppNameProvider AppNameProvider
@inject IAnimalsClient AnimalsClient

<PageTitle>Animals - @AppNameProvider.AppName</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Search Animals</MudText>

@if (matches == null)
{
    <MudProgressCircular Indeterminate="true"/>
}
else
{
    <MudGrid>
        @* Search controls *@
        <MudItem xs="12" md="3">
            <MudPaper>
                <AnimalSearchControls DataChanged="OnSearchDataChanged"></AnimalSearchControls>
            </MudPaper>
        </MudItem>

        @* Results *@
        <MudItem xs="12" md="9">
            <MudContainer Fixed="true" Class="d-flex flex-wrap gap-2">
                @foreach (var match in matches)
                {
                    <AnimalCard Match="match"/>
                }
            </MudContainer>
        </MudItem>
    </MudGrid>
}


@code {
    private IEnumerable<AnimalMatch>? matches;

    protected override async Task OnInitializedAsync()
    {
        matches = await AnimalsClient.SearchAsync(new SearchAnimalsRequest());
    }

    private async Task OnSearchDataChanged(SearchAnimalsRequest request)
    {
        matches = await AnimalsClient.SearchAsync(request);
    }

}
