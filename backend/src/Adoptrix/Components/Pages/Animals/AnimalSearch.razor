@page "/animals"
@using Adoptrix.Application.Features.Animals.Queries
@using Adoptrix.Application.Features.Animals.Responses
@using MediatR
@using Adoptrix.Components.Animals
@inject AppNameProvider AppNameProvider
@inject ISender Sender;

<PageTitle>Animals - @AppNameProvider.AppName</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Search Animals</MudText>

@if (results == null)
{
    <MudProgressCircular Indeterminate="true"/>
}
else
{
    <MudGrid>
        @* Search controls *@
        <MudItem xs="12" md="3">
            <MudPaper>
                <AnimalSearchControls DataChanged="OnSearchDataChanged"></AnimalSearchControls>
            </MudPaper>
        </MudItem>

        @* Results *@
        <MudItem xs="12" md="9">
            <MudContainer Fixed="true" Class="d-flex flex-wrap gap-2">
                @foreach (var result in results)
                {
                    <AnimalCard Result="result"/>
                }
            </MudContainer>
        </MudItem>
    </MudGrid>
}


@code {
    private IEnumerable<SearchAnimalsResult>? results;

    protected override async Task OnInitializedAsync()
    {
        results = await Sender.Send(new SearchAnimalsQuery());
    }

    private async Task OnSearchDataChanged(SearchAnimalsQuery query)
    {
        results = await Sender.Send(query);
    }

}
