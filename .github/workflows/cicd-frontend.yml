name: CI/CD Frontend

on:
  push:
    branches: main
    paths:
      - frontend/**
      - .github/workflows/cicd-frontend.yml
  pull_request:
    branches: main
    types:
      - opened
      - synchronize
      - reopened
      - closed
    paths:
      - frontend/**
      - .github/workflows/cicd-frontend.yml

jobs:
  # Build and deploy. Create preview environment for pull requests
  build_deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build and deploy
    runs-on: ubuntu-latest
    environment: demo
    env:
      PROJECT_DIRECTORY: ${{ github.workspace }}/frontend
      BUILD_CONFIGURATION: demo
      BUILD_DIRECTORY: ${{ github.workspace }}/frontend/dist/browser
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # Install dependencies
      - name: Install project dependencies
        run: npm ci
        working-directory: ${{ env.PROJECT_DIRECTORY }}

      # Build the client
      - name: Build client application
        working-directory: ${{ env.PROJECT_DIRECTORY }}
        run: npx ng build --configuration ${{ env.BUILD_CONFIGURATION }}

      # Deploy to Azure Static Web App
      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: upload
          production_branch: main
          azure_static_web_apps_api_token: ${{ secrets.CLIENT_DEPLOYMENT_TOKEN }}
          app_location: ${{ env.BUILD_DIRECTORY }}
          skip_app_build: true
          skip_api_build: true

  # Close the preview environment when the pull request is closed
  close_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close pull request
    environment: demo
    steps:
      - name: Remove preview environment
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: close
          azure_static_web_apps_api_token: ${{ secrets.CLIENT_DEPLOYMENT_TOKEN }}
          app_location: null # Unused in close pr step

  # Update CORS settings
  update_cors:
    name: Update CORS settings
    runs-on: ubuntu-latest
    needs: [build_deploy, close_pr]
    if: always()
    environment: demo
    permissions:
      id-token: write
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # Execute script
      - name: Execute script
        uses: azure/powershell@v1
        with:
          inlineScript: ${{ github.workspace }}/deploy/scripts/Update-ContainerAppCors.ps1 -ResourceGroupName ${{ vars.AZURE_RESOURCE_GROUP }}
          azPSVersion: '11.3.0'
